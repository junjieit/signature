!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.DrawBoard=e():t.DrawBoard=e()}(this,function(){return function(t){function e(n){if(i[n])return i[n].exports;var a=i[n]={i:n,l:!1,exports:{}};return t[n].call(a.exports,a,a.exports,e),a.l=!0,a.exports}var i={};return e.m=t,e.c=i,e.i=function(t){return t},e.d=function(t,i,n){e.o(t,i)||Object.defineProperty(t,i,{configurable:!1,enumerable:!0,get:n})},e.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(i,"a",i),i},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=0)}([function(t,e,i){"use strict";function n(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var a=function(){function t(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,i,n){return i&&t(e.prototype,i),n&&t(e,n),e}}(),s=function(){function t(e){n(this,t),this.canvas=e,this.context=e.getContext("2d"),this.isWriting=!1,this.lastX=0,this.lastY=0,this.lineWidthMax=0,this.lineWidthMin=1,this.lastTime=0,this.lastLineWidth=0,this.lastImg="",this.init(),this.bindEvent()}return a(t,[{key:"init",value:function(){this.context.lineCap="round",this.context.lineJoin="round",this.lineWidthMax=3,this.lastLineWidth=this.lineWidthMax/2}},{key:"clear",value:function(){this.context.clearRect(0,0,this.canvas.width,this.canvas.height)}},{key:"cancel",value:function(){this.context.putImageData(this.lastImg,0,0)}},{key:"save",value:function(t,e){var i=this;if(!this.lastX)return console.log("null"),void(e&&e(!1));if("only-draw"==t){var n=this.canvas.toDataURL("image/png"),a=new Image;a.src=n;var s=document.createElement("canvas"),o=s.getContext("2d");a.onload=function(){var t=i._getImgCoordinate();s.setAttribute("width",t.width),s.setAttribute("height",t.height),o.drawImage(a,t.minX,t.minY,t.width,t.height,0,0,t.width,t.height);var n=s.toDataURL("image/png");e&&e(n)}}else{var h=this.canvas.toDataURL("image/png");e&&e(h)}}},{key:"bindEvent",value:function(){var t=this;this.canvas.onmousedown=function(e){e.preventDefault(),t.startWrite(t._getCo(e.clientX,e.clientY))},this.canvas.onmousemove=function(e){e.preventDefault(),t.isWriting&&t.writing(t._getCo(e.clientX,e.clientY))},this.canvas.onmouseup=function(e){e.preventDefault(),t.isWriting&&t.endWrite()},this.canvas.onmouseout=function(e){e.preventDefault(),t.isWriting&&t.endWrite()},this.canvas.addEventListener("touchstart",function(e){e.preventDefault();var i=e.touches[0];t.startWrite(t._getCo(i.clientX,i.clientY))}),this.canvas.addEventListener("touchmove",function(e){if(e.preventDefault(),t.isWriting){var i=e.touches[0];t.writing(t._getCo(i.clientX,i.clientY))}}),this.canvas.addEventListener("touchend",function(e){e.preventDefault(),t.endWrite()})}},{key:"startWrite",value:function(t){this.isWriting=!0,this.lastX=t.x,this.lastY=t.y,this.lastTime=(new Date).getTime(),this.lastLineWidth=this.lineWidthMax/2,this.lastImg=this.context.getImageData(0,0,this.canvas.width,this.canvas.height)}},{key:"writing",value:function(t){var e=(new Date).getTime();e!=this.lastTime&&(this.context.beginPath(),this.context.lineWidth=this._getLineWidth(this._getS(this.lastX,this.lastY,t.x,t.y),e-this.lastTime),this.context.moveTo(this.lastX,this.lastY),this.context.lineTo(t.x,t.y),this.context.stroke(),this.lastX=t.x,this.lastY=t.y,this.lastTime=e)}},{key:"endWrite",value:function(){this.isWriting=!1}},{key:"_getCo",value:function(t,e){var i=canvas.getBoundingClientRect();return{x:t-i.left,y:e-i.top}}},{key:"_getS",value:function(t,e,i,n){return Math.sqrt((i-t)*(i-t)+(n-e)*(n-e))}},{key:"_getLineWidth",value:function(t,e){var i=t/e,n=0;return n=i<.1?this.lineWidthMax:i>8?this.lineWidthMin:this.lineWidthMax-(i-.1)/7.9*(this.lineWidthMax-this.lineWidthMin),n=3*this.lastLineWidth/5+2*n/5,this.lastLineWidth=n,n}},{key:"_getImgCoordinate",value:function(){for(var t=this.context.getImageData(0,0,this.canvas.width,this.canvas.height).data,e=canvas.width,i=0,n=canvas.height,a=0,s=0;s<canvas.width;s++)for(var o=0;o<canvas.height;o++){var h=4*(s+canvas.width*o);(t[h]>0||t[h+1]>0||t[h+2]||t[h+3]>0)&&(a=Math.max(o,a),i=Math.max(s,i),n=Math.min(o,n),e=Math.min(s,e))}return e++,i++,n++,a++,{minX:e-1,minY:n-1,width:i-e,height:a-n}}}]),t}();t.exports=s}])});